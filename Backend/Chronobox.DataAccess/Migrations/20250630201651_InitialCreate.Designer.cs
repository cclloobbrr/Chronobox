// <auto-generated />
using System;
using Chronobox.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chronobox.DataAccess.Migrations
{
    [DbContext(typeof(ChronoboxDbContext))]
    [Migration("20250630201651_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Chronobox.DataAccess.Entities.ContainerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("DateOfCreation")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("Chronobox.DataAccess.Entities.ExpirationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<int>("NotificationDaysBefore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Expiration");
                });

            modelBuilder.Entity("Chronobox.DataAccess.Entities.ObjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExpirationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasExpirationDate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContainerId");

                    b.HasIndex("ExpirationId");

                    b.ToTable("Object");
                });

            modelBuilder.Entity("Chronobox.DataAccess.Entities.ObjectEntity", b =>
                {
                    b.HasOne("Chronobox.DataAccess.Entities.ContainerEntity", "Container")
                        .WithMany("Objects")
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chronobox.DataAccess.Entities.ExpirationEntity", "Expiration")
                        .WithMany()
                        .HasForeignKey("ExpirationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Container");

                    b.Navigation("Expiration");
                });

            modelBuilder.Entity("Chronobox.DataAccess.Entities.ContainerEntity", b =>
                {
                    b.Navigation("Objects");
                });
#pragma warning restore 612, 618
        }
    }
}
